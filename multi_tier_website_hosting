Step 1: Connect to Ubuntu EC2 Instance
Go to AWS Console â†’ EC2
Find your Ubuntu instance
Click Connect â†’ Copy the SSH command
Open a terminal and run:
bash
Copy
Edit
ssh -i "your-key.pem" ubuntu@your-ec2-public-ip
ðŸ”¹ Step 2: Install Apache, PHP, and MySQL Client
Run the following commands on your Ubuntu EC2 instance:

bash
Copy
Edit
# Update package lists
sudo apt update -y && sudo apt upgrade -y

# Install Apache web server
sudo apt install -y apache2

# Install PHP and MySQL client
sudo apt install -y php libapache2-mod-php php-mysql mysql-client

# Enable and start Apache
sudo systemctl enable apache2
sudo systemctl start apache2
ðŸ”¹ Step 3: Set Up Your PHP Website
Navigate to the web root directory:

bash
Copy
Edit
cd /var/www/html
Create a sample PHP file to verify PHP installation:

bash
Copy
Edit
echo "<?php phpinfo(); ?>" | sudo tee /var/www/html/index.php
Change file permissions:

bash
Copy
Edit
sudo chown -R www-data:www-data /var/www/html
sudo chmod -R 755 /var/www/html
Restart Apache:

bash
Copy
Edit
sudo systemctl restart apache2
ðŸ”¹ Step 4: Create an RDS MySQL Database
Go to AWS Console â†’ RDS
Click Create Database
Engine: Select MySQL
Settings:
DB Identifier: MyDatabase
Username: admin
Password: intel123
Connectivity:
VPC: Select the same as your EC2 instance
Public Access: NO (Private for security)
Security Group: Allow MySQL (3306) from EC2 Security Group
Click Create Database
ðŸ”¹ Step 5: Allow EC2 to Access RDS
Go to AWS Console â†’ EC2 â†’ Security Groups
Find the RDS Security Group
Edit Inbound Rules:
Allow MySQL (3306) from EC2 Security Group
ðŸ”¹ Step 6: Create Database & Table in RDS
Find RDS Endpoint in AWS Console â†’ RDS â†’ Your Database â†’ Connectivity & Security
Connect from Ubuntu EC2:
bash
Copy
Edit
mysql -h your-rds-endpoint -u admin -pintel123
Create the database & table:
sql
Copy
Edit
CREATE DATABASE intel;
USE intel;
CREATE TABLE data (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100)
);
ðŸ”¹ Step 7: Configure PHP to Connect to RDS
Create a PHP configuration file:

bash
Copy
Edit
sudo nano /var/www/html/config.php
Add this PHP code:

php
Copy
Edit
<?php
$servername = "your-rds-endpoint";
$username = "admin";
$password = "intel123";
$dbname = "intel";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
echo "Connected successfully";
?>
Save and exit (CTRL + X, then Y, then Enter)

Restart Apache:

bash
Copy
Edit
sudo systemctl restart apache2
ðŸ”¹ Step 8: Enable Auto Scaling for High Availability
Go to AWS Console â†’ EC2 â†’ Auto Scaling Groups
Click Create Auto Scaling Group
Choose a Launch Template:
Click Create a new launch template
AMI: Select Ubuntu
Instance Type: t2.micro
Key Pair: Select the same as your EC2
Security Group: Use the same as EC2
Click Create Template
Back in Auto Scaling, select the Launch Template
Set Scaling Group Size:
Min: 2
Max: 4
Desired Capacity: 2
Network: Choose the same VPC and public subnets
Click Create Auto Scaling Group
ðŸ”¹ Step 9: Allow All Traffic to EC2 (If Needed)
Go to AWS Console â†’ EC2 â†’ Security Groups
Select EC2 Security Group
Edit Inbound Rules â†’ Allow All Traffic (0.0.0.0/0)
âœ… Final Testing
Auto Scaling Test:

Go to EC2 â†’ Terminate an instance
Auto Scaling should replace it automatically
RDS Connection Test:

Open http://EC2-PUBLIC-IP/config.php
It should display "Connected successfully"
